<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="shortcut icon" href="%PUBLIC_URL%/favicon.ico" />
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=ZCOOL+QingKe+HuangYou" rel="stylesheet">
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="theme-color" content="#000000" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>My Favorite Cars In Rocket League</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
	
	<ul class="cars">
      <% for(var i=0; i<cars.length; i++) {%>
      <li class="form-group">
        <span><%= cars[i].carsInput %></span>
        <span><%= cars[i].descriptionInput %></span>
      </li>
      <% } %>
    </ul>
  
    <div id="root"></div>
	  <div class="card" style="width: 18rem;">
	  <h5 class="card-title-max">What do the pro's use?</h5>
      <img src="%PUBLIC_URL%/images/octane.jpg" class="card-img-top" alt="Octane">
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
      </div>
      <img src="%PUBLIC_URL%/images/batmobile.jpg" class="card-img-top" alt="Batmobile">
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
      </div>
      <img src="%PUBLIC_URL%/images/dominus.jpg" class="card-img-top" alt="Dominus">
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
      </div>
    </div>
	
    <form action="/cars" method="POST">
      <div class="form-group">
        <label for="addCar">Car Name</label>
        <input type="text" class="form-control" id="inputCar" aria-describedby="carHelp" placeholder="Enter car" name="carsInput">
        <small id="carHelp" class="form-text text-muted">Enter the name of the Rocket League car you would like to add.</small>
      </div>
      <div class="form-group">
        <label for="addCarDescription">Car Description</label>
		<input type="text" class="form-control" id="inputCarDescription" aria-describedby="carDescriptionHelp" placeholder="Enter description" name="descriptionInput">
		<small id="carDescriptionHelp" class="form-text text-muted">Enter the description of the Rocket League car you would like to add.</small>
	  </div>
	  <button type="submit" class="btn btn-primary">Submit</button>
	</form>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>
